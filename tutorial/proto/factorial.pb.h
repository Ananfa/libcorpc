// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: factorial.proto

#ifndef PROTOBUF_factorial_2eproto__INCLUDED
#define PROTOBUF_factorial_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "corpc_option.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_factorial_2eproto();
void protobuf_AssignDesc_factorial_2eproto();
void protobuf_ShutdownFile_factorial_2eproto();

class FactorialRequest;
class FactorialResponse;

// ===================================================================

class FactorialRequest : public ::google::protobuf::Message {
 public:
  FactorialRequest();
  virtual ~FactorialRequest();

  FactorialRequest(const FactorialRequest& from);

  inline FactorialRequest& operator=(const FactorialRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FactorialRequest& default_instance();

  void Swap(FactorialRequest* other);

  // implements Message ----------------------------------------------

  FactorialRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FactorialRequest& from);
  void MergeFrom(const FactorialRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 n = 1;
  inline bool has_n() const;
  inline void clear_n();
  static const int kNFieldNumber = 1;
  inline ::google::protobuf::uint32 n() const;
  inline void set_n(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:FactorialRequest)
 private:
  inline void set_has_n();
  inline void clear_has_n();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 n_;
  friend void  protobuf_AddDesc_factorial_2eproto();
  friend void protobuf_AssignDesc_factorial_2eproto();
  friend void protobuf_ShutdownFile_factorial_2eproto();

  void InitAsDefaultInstance();
  static FactorialRequest* default_instance_;
};
// -------------------------------------------------------------------

class FactorialResponse : public ::google::protobuf::Message {
 public:
  FactorialResponse();
  virtual ~FactorialResponse();

  FactorialResponse(const FactorialResponse& from);

  inline FactorialResponse& operator=(const FactorialResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FactorialResponse& default_instance();

  void Swap(FactorialResponse* other);

  // implements Message ----------------------------------------------

  FactorialResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FactorialResponse& from);
  void MergeFrom(const FactorialResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint64 result() const;
  inline void set_result(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:FactorialResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 result_;
  friend void  protobuf_AddDesc_factorial_2eproto();
  friend void protobuf_AssignDesc_factorial_2eproto();
  friend void protobuf_ShutdownFile_factorial_2eproto();

  void InitAsDefaultInstance();
  static FactorialResponse* default_instance_;
};
// ===================================================================

class FactorialService_Stub;

class FactorialService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline FactorialService() {};
 public:
  virtual ~FactorialService();

  typedef FactorialService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void factorial(::google::protobuf::RpcController* controller,
                       const ::FactorialRequest* request,
                       ::FactorialResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FactorialService);
};

class FactorialService_Stub : public FactorialService {
 public:
  FactorialService_Stub(::google::protobuf::RpcChannel* channel);
  FactorialService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~FactorialService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements FactorialService ------------------------------------------

  void factorial(::google::protobuf::RpcController* controller,
                       const ::FactorialRequest* request,
                       ::FactorialResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FactorialService_Stub);
};


// ===================================================================


// ===================================================================

// FactorialRequest

// required uint32 n = 1;
inline bool FactorialRequest::has_n() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FactorialRequest::set_has_n() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FactorialRequest::clear_has_n() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FactorialRequest::clear_n() {
  n_ = 0u;
  clear_has_n();
}
inline ::google::protobuf::uint32 FactorialRequest::n() const {
  // @@protoc_insertion_point(field_get:FactorialRequest.n)
  return n_;
}
inline void FactorialRequest::set_n(::google::protobuf::uint32 value) {
  set_has_n();
  n_ = value;
  // @@protoc_insertion_point(field_set:FactorialRequest.n)
}

// -------------------------------------------------------------------

// FactorialResponse

// required uint64 result = 1;
inline bool FactorialResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FactorialResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FactorialResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FactorialResponse::clear_result() {
  result_ = GOOGLE_ULONGLONG(0);
  clear_has_result();
}
inline ::google::protobuf::uint64 FactorialResponse::result() const {
  // @@protoc_insertion_point(field_get:FactorialResponse.result)
  return result_;
}
inline void FactorialResponse::set_result(::google::protobuf::uint64 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:FactorialResponse.result)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_factorial_2eproto__INCLUDED
